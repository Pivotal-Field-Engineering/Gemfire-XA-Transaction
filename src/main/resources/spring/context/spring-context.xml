<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:gfe="http://www.springframework.org/schema/gemfire"
	xmlns:gfe-data="http://www.springframework.org/schema/data/gemfire"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.11.1.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.2.xsd
http://www.springframework.org/schema/data/gemfire
	http://www.springframework.org/schema/data/gemfire/spring-data-gemfire.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/gemfire
	http://www.springframework.org/schema/gemfire/spring-gemfire.xsd
	http://www.springframework.org/schema/data/repository
    http://www.springframework.org/schema/data/repository/spring-repository.xsd">


	<context:annotation-config />

	<context:component-scan base-package="io.pivotal" />

	<util:properties id="CacheConfigurationSettings">
		<prop key="name">springGemFireCache</prop>
		<prop key="locators">localhost[10334]</prop>
		<prop key="log-level">config</prop>
		<prop key="mcast-port">0</prop>
	</util:properties>

	<!-- allows for ${} replacement in the spring xml configuration from the
		system.properties file on the classpath -->
	<context:property-placeholder location="classpath:system.properties" />

	<!-- ActiveMQ XA connection factory provided by Atomikos -->

	<bean id="connectionFactory"
		class="com.atomikos.jms.AtomikosConnectionFactoryBean">
		<property name="uniqueResourceName" value="xamq"/>
		<property name="LocalTransactionMode" value="false"/>
		<property name="xaConnectionFactory">
			<bean class="org.apache.activemq.ActiveMQXAConnectionFactory">
				<property name="brokerURL" value="${jms.url}"/>
				<property name="userName" value="${jms.username}"/>
				<property name="password" value="${jms.password}"/>
			</bean>
		</property>
	</bean>


	<!-- JmsTemplate Definition -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<constructor-arg ref="connectionFactory" />
	</bean>


	<!-- Message Driven POJO (MDP) -->
	<bean id="messageListener" class="io.pivotal.jms.core.TradeMessageListener" />

	<bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="test.queue1"/>
	</bean>

	<!-- and the message listener container -->
	<bean id="jmsContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="destination" ref="destination"/>
		<property name="messageListener" ref="messageListener" />
		<property name="transactionManager" ref="transactionManager" />
	</bean>


	<!-- Transaction Related: Start -->

	<bean id="tradeDataSource" init-method="init" destroy-method="close"
			class="com.atomikos.jdbc.AtomikosDataSourceBean">
		<property name="xaDataSource">
			<bean class="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource">
				<property name="url" value="jdbc:mysql://localhost:3306/gemfiretest" />
				<property name="user" value="admin" />
				<property name="password" value="admin" />
				<property name="pinGlobalTxToPhysicalConnection" value="true" />
			</bean>
		</property>
		<property name="uniqueResourceName" value="xads1"/>
	</bean>


	<bean id="tradeEntityManager" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jtaDataSource" ref="tradeDataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="false"/>
		        <property name="generateDdl" value="true"/>
		        <property name="database" value="MYSQL" />
			</bean>
		</property>
		<property name="packagesToScan" value="io.pivotal.domain"/>
		<property name="persistenceUnitName" value="tradePersistenceUnit"/>
		<property name="jpaPropertyMap" >
			<map>
				<entry key="hibernate.transaction.jta.platform" value="io.pivotal.jta.AtomikosJtaPlatform" />
				<entry key="javax.persistence.transactionType" value="JTA" />
			</map>
		</property>
	</bean>


	<bean id="userTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="10000"/>
	</bean>

	<bean id="atomikosTransactionManager" init-method="init" destroy-method = "close"
			class="com.atomikos.icatch.jta.UserTransactionManager">
		<property name="forceShutdown" value="false"/>
	</bean>

	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="staticMethod" value="io.pivotal.jta.AtomikosJtaPlatform.setTransactoinManager"/>
	    <property name="arguments">
	        <list>
	            <ref bean="atomikosTransactionManager"/>
	        </list>
	    </property>
	</bean>

	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <property name="staticMethod" value="io.pivotal.jta.AtomikosJtaPlatform.setUserTransaction"/>
	    <property name="arguments">
	        <list>
	            <ref bean="userTransaction"/>
	        </list>
	    </property>
	</bean>

	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
	    <property name="transactionManager" ref="atomikosTransactionManager" />
	    <property name="userTransaction" ref="userTransaction" />
	    <property name="allowCustomIsolationLevels" value="true" />
	</bean>

	<!-- Transaction Related: End -->


	<!-- Gemfire Properties -->
	<bean id="pdxSerializer" class="com.gemstone.gemfire.pdx.ReflectionBasedAutoSerializer">
		<constructor-arg value="io.pivotal.domain.*"/>
	</bean>

	<gfe:cache properties-ref="CacheConfigurationSettings" copy-on-read="true"
			pdx-serializer-ref="pdxSerializer" pdx-read-serialized="true" />
	<gfe:cache-server auto-startup="true" cache-ref="gemfireCache" />

	<gfe:partitioned-region id="trade" persistent="false"/>
<!-- 	<gfe:transaction-manager id="tx-manager" /> -->

</beans>